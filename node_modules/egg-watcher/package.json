{
  "_args": [
    [
      {
        "raw": "egg-watcher@^2.1.2",
        "scope": null,
        "escapedName": "egg-watcher",
        "name": "egg-watcher",
        "rawSpec": "^2.1.2",
        "spec": ">=2.1.2 <3.0.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/egg"
    ]
  ],
  "_cnpm_publish_time": 1496585859040,
  "_from": "egg-watcher@^2.1.2",
  "_hasShrinkwrap": false,
  "_id": "egg-watcher@2.1.3",
  "_location": "/egg-watcher",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/egg-watcher-2.1.3.tgz_1496585858951_0.70465197134763"
  },
  "_npmUser": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "egg-watcher@^2.1.2",
    "scope": null,
    "escapedName": "egg-watcher",
    "name": "egg-watcher",
    "rawSpec": "^2.1.2",
    "spec": ">=2.1.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg"
  ],
  "_resolved": "http://registry.npm.taobao.org/egg-watcher/download/egg-watcher-2.1.3.tgz",
  "_shasum": "581a654d0beb65a68c69f129b58d609119ba5cbe",
  "_shrinkwrap": null,
  "_spec": "egg-watcher@^2.1.2",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/egg",
  "bugs": {
    "url": "https://github.com/eggjs/egg-watcher/issues"
  },
  "ci": {
    "version": "6, 7"
  },
  "dependencies": {
    "camelcase": "^4.1.0",
    "sdk-base": "^3.1.1",
    "wt": "^1.1.1"
  },
  "description": "file watcher plugin for egg",
  "devDependencies": {
    "autod": "^2.8.0",
    "egg": "^1.2.0",
    "egg-bin": "^3.3.2",
    "egg-ci": "^1.6.0",
    "egg-mock": "^3.5.0",
    "eslint": "^3.19.0",
    "eslint-config-egg": "^3.2.0",
    "ko-sleep": "^1.0.2",
    "pedding": "^1.1.0",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "581a654d0beb65a68c69f129b58d609119ba5cbe",
    "size": 5151,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/egg-watcher/download/egg-watcher-2.1.3.tgz"
  },
  "eggPlugin": {
    "name": "watcher"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "files": [
    "app.js",
    "agent.js",
    "config",
    "lib"
  ],
  "gitHead": "6263d568124a15193a8196df4298f628d5f7c644",
  "homepage": "https://github.com/eggjs/egg-watcher",
  "keywords": [
    "egg-watcher",
    "egg",
    "watcher",
    "watch"
  ],
  "maintainers": [
    {
      "name": "atian25",
      "email": "atian25@qq.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "eggjs",
      "email": "fengmk2+eggjs@gmail.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "luckydrq",
      "email": "drqzju@gmail.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    },
    {
      "name": "shaoshuai0102",
      "email": "shaoshuai0102@gmail.com"
    }
  ],
  "name": "egg-watcher",
  "optionalDependencies": {},
  "publish_time": 1496585859040,
  "readme": "# egg-watcher\nFile watcher plugin for egg\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/egg-watcher.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/egg-watcher\n[travis-image]: https://img.shields.io/travis/eggjs/egg-watcher.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eggjs/egg-watcher\n[codecov-image]: https://codecov.io/github/eggjs/egg-watcher/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/eggjs/egg-watcher?branch=master\n[david-image]: https://img.shields.io/david/eggjs/egg-watcher.svg?style=flat-square\n[david-url]: https://david-dm.org/eggjs/egg-watcher\n[snyk-image]: https://snyk.io/test/npm/egg-watcher/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/egg-watcher\n[download-image]: https://img.shields.io/npm/dm/egg-watcher.svg?style=flat-square\n[download-url]: https://npmjs.org/package/egg-watcher\n\n## Usage\n\nIn worker process:\n\n### app.watcher.watch(path, listener)\nStart watching file(s).\n\n- path(String|Array): file path(s)\n- listener(Function): file change callback\n\n### app.watcher.unwatch(path[, listener])\nStop watching file(s).\n\n- path(String|Array): file path(s)\n- listener(Function): file change callback\n\nIn agent process:\n\n### agent.watcher.watch(path, listener)\nStart watching file(s).\n\n- path(String|Array): file path(s)\n- listener(Function): file change callback\n\n### agent.watcher.unwatch(path[, listener])\nStop watching file(s).\n\n- path(String|Array): file path(s)\n- listener(Function): file change callback\n\n## Watching mode\n\n### `development` Mode\n\nThere's a built-in [development mode](https://github.com/eggjs/egg-watcher/blob/master/lib/event-sources/development.js) which works in local(env is `local`). Once files on disk is modified it will emit a `change` event immediately.\n\n### Customize Watching Mode\n\nSay we want to build a custom event source plugin (package name: `egg-watcher-custom`, eggPlugin.name: `watcherCustom`).\n\nFirstly define our custom event source like this:\n\n```js\n// {plugin_root}/lib/custom_event_source.js\nconst Base = require('sdk-base');\nclass CustomEventSource extends Base {\n  // `opts` comes from app.config[${eventSourceName}]\n  // `eventSourceName` will be registered later in\n  // `config.watcher.eventSources` as the key shown below\n  constructor(opts) {\n    super(opts);\n    this.ready(true);\n  }\n\n  watch(path) {\n    // replace this with your desired way of watching,\n    // when aware of any change, emit a `change` event\n    // with an info object containing `path` property\n    // specifying the changed directory or file.\n    this._h = setInterval(() => {\n      this.emit('change', { path });\n    }, 1000);\n  }\n\n  unwatch() {\n    // replace this with your implementation\n    if (this._h) {\n      clearInterval(this._h);\n    }\n  }\n}\n\nmodule.exports = CustomEventSource;\n```\n\nEvent source implementations varies according to your running environment. When working with vagrant, docker, samba or such other non-standard way of development, you should use a different watch API specific to what you are working with.\n\nThen add your custom event source to config:\n\n```js\n// config.default.js\nexports.watcher = {\n  eventSources: {\n    custom: require('../lib/custom_event_source'),\n  },\n};\n```\n\nChoose to use your custom watching mode in your desired env.\n\n```js\n// config.${env}.js\nexports.watcher = {\n  type: 'custom',\n};\n\n// this will pass to your CustomEventSource constructor as opts\nexports.watcherCustom = {\n  // foo: 'bar',\n};\n```\n\nIf possible, plugins named like `egg-watcher-${customName}`(`egg-watcher-vagrant` eg.) are recommended.\n\n## Questions & Suggestions\n\nPlease open an issue [here](https://github.com/eggjs/egg/issues).\n\n## License\n\n[MIT](https://github.com/eggjs/egg-watcher/blob/master/LICENSE)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/eggjs/egg-watcher.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "npm run lint && npm run cov",
    "cov": "egg-bin cov",
    "lint": "eslint --ext js . --fix",
    "test": "egg-bin test"
  },
  "version": "2.1.3"
}
