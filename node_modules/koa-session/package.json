{
  "_args": [
    [
      {
        "raw": "koa-session@^4.0.0",
        "scope": null,
        "escapedName": "koa-session",
        "name": "koa-session",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/egg-session"
    ]
  ],
  "_cnpm_publish_time": 1496305827708,
  "_from": "koa-session@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "koa-session@4.1.0",
  "_location": "/koa-session",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/koa-session-4.1.0.tgz_1496305827615_0.3111159880645573"
  },
  "_npmUser": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-session@^4.0.0",
    "scope": null,
    "escapedName": "koa-session",
    "name": "koa-session",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg-session"
  ],
  "_resolved": "http://registry.npm.taobao.org/koa-session/download/koa-session-4.1.0.tgz",
  "_shasum": "8bd3faef218daa089e6780940ffe87525097938f",
  "_shrinkwrap": null,
  "_spec": "koa-session@^4.0.0",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/egg-session",
  "bugs": {
    "url": "https://github.com/koajs/session/issues"
  },
  "dependencies": {
    "crc": "^3.4.4",
    "debug": "^2.2.0",
    "uid-safe": "^2.1.3"
  },
  "description": "Koa cookie session middleware",
  "devDependencies": {
    "eslint": "3",
    "eslint-config-egg": "3",
    "istanbul": "0",
    "koa": "1",
    "mm": "^2.1.0",
    "mocha": "3 ",
    "should": "8",
    "supertest": "2"
  },
  "directories": {},
  "dist": {
    "shasum": "8bd3faef218daa089e6780940ffe87525097938f",
    "size": 6568,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/koa-session/download/koa-session-4.1.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "ae21f5212cd578439bb310f8082886ffaadb2905",
  "homepage": "https://github.com/koajs/session#readme",
  "keywords": [
    "koa",
    "middleware",
    "session",
    "cookie"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "aheckmann",
      "email": "aaron.heckmann+github@gmail.com"
    },
    {
      "name": "coderhaoxin",
      "email": "coderhaoxin@outlook.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "eivifj",
      "email": "eivind.fjeldstad@gmail.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    }
  ],
  "name": "koa-session",
  "optionalDependencies": {},
  "publish_time": 1496305827708,
  "readme": "# koa-session\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Gittip][gittip-image]][gittip-url]\n[![David deps][david-image]][david-url]\n[![iojs version][iojs-image]][iojs-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-session.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-session\n[travis-image]: https://img.shields.io/travis/koajs/session.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/session\n[coveralls-image]: https://img.shields.io/coveralls/koajs/session.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/session?branch=master\n[gittip-image]: https://img.shields.io/gittip/fengmk2.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/fengmk2/\n[david-image]: https://img.shields.io/david/koajs/session.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/session\n[iojs-image]: https://img.shields.io/badge/io.js-%3E=_1.0-yellow.svg?style=flat-square\n[iojs-url]: http://iojs.org/\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.12-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/koa-session.svg?style=flat-square\n[download-url]: https://npmjs.org/package/koa-session\n\n Simple cookie-based session middleware for Koa.\n\n## Installation\n\n```js\n$ npm install koa-session\n```\n\n## Example\n\n  View counter example:\n\n```js\nvar session = require('koa-session');\nvar koa = require('koa');\nvar app = koa();\n\napp.keys = ['some secret hurr'];\n\nvar CONFIG = {\n  key: 'koa:sess', /** (string) cookie key (default is koa:sess) */\n  /** (number || 'session') maxAge in ms (default is 1 days) */\n  /** 'session' will result in a cookie that expires when session/browser is closed */\n  /** Warning: If a session cookie is stolen, this cookie will never expire */\n  maxAge: 86400000,\n  overwrite: true, /** (boolean) can overwrite or not (default true) */\n  httpOnly: true, /** (boolean) httpOnly or not (default true) */\n  signed: true, /** (boolean) signed or not (default true) */\n};\napp.use(session(CONFIG, app));\n// or if you prefer all default config, just use => app.use(session(app));\n\napp.use(function *(){\n  // ignore favicon\n  if (this.path === '/favicon.ico') return;\n\n  var n = this.session.views || 0;\n  this.session.views = ++n;\n  this.body = n + ' views';\n})\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\nFor Koa 2, use [koa-convert](https://github.com/gyson/koa-convert) to convert the session middleware :\n\n```js\nconst koa = require('koa');\nconst session = require('koa-session')\nconst convert = require('koa-convert');\n\nconst app = new koa();\napp.use(convert(session(app)));\n\n// codes\n```\n\n## API\n\n### Options\n\n  The cookie name is controlled by the `key` option, which defaults\n  to \"koa:sess\". All other options are passed to `ctx.cookies.get()` and\n  `ctx.cookies.set()` allowing you to control security, domain, path,\n  and signing among other settings.\n\n#### Custom `encode/decode` Support\n\n  Use `options.encode` and `options.decode` to customize your own encode/decode methods.\n\n### Hooks\n\n  - `valid()`: valid session value before use it\n  - `beforeSave()`: hook before save session\n\n### External Session Stores\n\n  Session will store in cookie by default, but it has some disadvantages:\n\n  - Session stored in client side unencrypted.\n  - [Browser cookie always have length limit](http://browsercookielimits.squawky.net/).\n\n\n  You can store the session content in external stores(redis, mongodb or other DBs) by pass `options.store` with three methods(need to be generator function or async function):\n\n  - `get(key)`: get session object by key\n  - `set(key, sess, maxAge)`: set session object for key, with a `maxAge` (in ms)\n  - `destroy(key)`: destroy session for key\n\n\n  Once you passed `options.store`, session is strong dependent on your external store, you can't access session if your external store is down. **Use external session stores only if necessary, avoid use session as a cache, keep session lean and stored by cookie!**\n\n### Session#isNew\n\n  Returns __true__ if the session is new.\n\n```js\nif (this.session.isNew) {\n  // user has not logged in\n} else {\n  // user has already logged in\n}\n```\n\n### Session#maxAge\n\n  Get cookie's maxAge.\n\n### Session#maxAge=\n\n  Set cookie's maxAge.\n\n### Destroying a session\n\n  To destroy a session simply set it to `null`:\n\n```js\nthis.session = null;\n```\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koajs/session.git"
  },
  "scripts": {
    "lint": "eslint lib test index.js",
    "test": "npm run lint && NODE_ENV=test mocha --require should --reporter spec test/*.test.js",
    "test-cov": "NODE_ENV=test node ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --require should test/*.test.js",
    "test-travis": "npm run lint && NODE_ENV=test node ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --require should test/*.test.js"
  },
  "version": "4.1.0"
}
