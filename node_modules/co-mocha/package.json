{
  "_args": [
    [
      {
        "raw": "co-mocha@^1.2.0",
        "scope": null,
        "escapedName": "co-mocha",
        "name": "co-mocha",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/egg-bin"
    ]
  ],
  "_cnpm_publish_time": 1485319462921,
  "_from": "co-mocha@^1.2.0",
  "_hasShrinkwrap": false,
  "_id": "co-mocha@1.2.0",
  "_location": "/co-mocha",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/co-mocha-1.2.0.tgz_1485319461204_0.6980975323822349"
  },
  "_npmUser": {
    "name": "blakeembrey",
    "email": "hello@blakeembrey.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "co-mocha@^1.2.0",
    "scope": null,
    "escapedName": "co-mocha",
    "name": "co-mocha",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg-bin"
  ],
  "_resolved": "http://registry.npm.taobao.org/co-mocha/download/co-mocha-1.2.0.tgz",
  "_shasum": "d9be35a2a2d16f4b1b0e83f6973401ca4b6660af",
  "_shrinkwrap": null,
  "_spec": "co-mocha@^1.2.0",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/egg-bin",
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "browser": {
    "path": false
  },
  "bugs": {
    "url": "https://github.com/blakeembrey/co-mocha/issues"
  },
  "dependencies": {
    "co": "^4.0.0",
    "is-generator": "^1.0.1"
  },
  "description": "Enable support for generators in Mocha tests",
  "devDependencies": {
    "browserify": "^14.0.0",
    "chai": "^3.0.0",
    "es6-promise": "^4.0.5",
    "istanbul": "git://github.com/gotwarlost/istanbul.git#harmony",
    "mocha": "^3.1.2",
    "pre-commit": "^1.0.7",
    "regenerator": "^0.9.0",
    "standard": "^8.5.0",
    "testem": "^1.13.0",
    "traceur": "0.0.111"
  },
  "directories": {},
  "dist": {
    "shasum": "d9be35a2a2d16f4b1b0e83f6973401ca4b6660af",
    "size": 5795,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/co-mocha/download/co-mocha-1.2.0.tgz"
  },
  "files": [
    "co-mocha.js",
    "lib/",
    "LICENSE"
  ],
  "gitHead": "629d98852833a98aaee4551f049e22ecfd6685cc",
  "homepage": "https://github.com/blakeembrey/co-mocha",
  "keywords": [
    "co",
    "mocha",
    "harmony",
    "generators"
  ],
  "license": "MIT",
  "main": "lib/co-mocha.js",
  "maintainers": [
    {
      "name": "blakeembrey",
      "email": "hello@blakeembrey.com"
    }
  ],
  "name": "co-mocha",
  "optionalDependencies": {},
  "peerDependencies": {
    "mocha": ">=1.18 <4"
  },
  "publish_time": 1485319462921,
  "readme": "# Co Mocha\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\nEnable support for generators in Mocha tests using [co](https://github.com/visionmedia/co).\n\nUse the `--harmony-generators` flag when running node 0.11.x to access generator functions, or transpile your tests using [traceur](https://github.com/google/traceur-compiler) or [regenerator](https://github.com/facebook/regenerator).\n\n## Installation\n\n```\nnpm install co-mocha --save-dev\n```\n\n## Usage\n\nJust require the module in your tests and start writing generators in your tests.\n\n```js\nit('should do something', function * () {\n  yield users.load(123)\n})\n```\n\n### Node\n\nInstall the module using `npm install co-mocha --save-dev`. Now just require the module to automatically monkey patch any available `mocha` instances. With `mocha`, you have multiple ways of requiring the module - add `--require co-mocha` to your `mocha.opts` or add `require('co-mocha')` inside your main test file.\n\nIf you need to monkey patch a different mocha instance you can use the library directly:\n\n```js\nvar mocha = require('mocha')\nvar coMocha = require('co-mocha')\n\ncoMocha(mocha)\n```\n\n### `<script>` Tag\n\n```html\n<script src=\"co-mocha.js\"></script>\n```\n\nIncluding the browserified script will automatically patch `window.Mocha`. Just make sure you include it after `mocha.js`. If that is not possible the library exposes `window.coMocha`, which can be used (`window.coMocha(window.Mocha)`).\n\n### AMD\n\nSame details as the script, but using AMD requires instead.\n\n## How It Works\n\nThe module monkey patches the `Runnable.prototype.run` method of `mocha` to enable generators. In contrast to other npm packages, `co-mocha` extends `mocha` at runtime - allowing you to use any compatible mocha version.\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/co-mocha.svg?style=flat\n[npm-url]: https://npmjs.org/package/co-mocha\n[downloads-image]: https://img.shields.io/npm/dm/co-mocha.svg?style=flat\n[downloads-url]: https://npmjs.org/package/co-mocha\n[travis-image]: https://img.shields.io/travis/blakeembrey/co-mocha.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/co-mocha\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/co-mocha.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/co-mocha?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/blakeembrey/co-mocha.git"
  },
  "scripts": {
    "build": "browserify lib/co-mocha.js -s co-mocha -o co-mocha.js",
    "lint": "standard",
    "test": "npm run lint && npm run build && npm run test-cov",
    "test-cov": "testem ci -l Firefox,Node",
    "test-spec": "mocha --harmony -R spec --require lib/co-mocha.js --bail"
  },
  "standard": {
    "ignore": [
      "coverage/**",
      "node_modules/**",
      "bower_components/**",
      "co-mocha.js"
    ]
  },
  "version": "1.2.0"
}
