{
  "_args": [
    [
      {
        "raw": "egg-core@^3.8.0",
        "scope": null,
        "escapedName": "egg-core",
        "name": "egg-core",
        "rawSpec": "^3.8.0",
        "spec": ">=3.8.0 <4.0.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/egg"
    ]
  ],
  "_cnpm_publish_time": 1496913099821,
  "_from": "egg-core@>=3.8.0 <4.0.0",
  "_id": "egg-core@3.10.0",
  "_inCache": true,
  "_location": "/egg-core",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/egg-core-3.10.0.tgz_1496913098982_0.8984736083075404"
  },
  "_npmUser": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "egg-core@^3.8.0",
    "scope": null,
    "escapedName": "egg-core",
    "name": "egg-core",
    "rawSpec": "^3.8.0",
    "spec": ">=3.8.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg"
  ],
  "_resolved": "https://registry.npm.taobao.org/egg-core/download/egg-core-3.10.0.tgz",
  "_shasum": "8ca300433612880441caa553667c81f4202ab97b",
  "_shrinkwrap": null,
  "_spec": "egg-core@^3.8.0",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/egg",
  "author": {
    "name": "gxcsoccer",
    "email": "gxcsoccer@126.com"
  },
  "bugs": {
    "url": "https://github.com/eggjs/egg-core/issues"
  },
  "ci": {
    "version": "6, 7"
  },
  "dependencies": {
    "co": "^4.6.0",
    "debug": "^2.6.8",
    "depd": "^1.1.0",
    "egg-logger": "^1.6.0",
    "egg-path-matching": "^1.0.0",
    "extend2": "^1.0.0",
    "globby": "^6.1.0",
    "inflection": "^1.12.0",
    "is-type-of": "^1.0.0",
    "koa": "^1.4.0",
    "koa-router": "^5.4.2",
    "node-homedir": "^1.0.0",
    "ready-callback": "^2.0.1",
    "utility": "^1.12.0"
  },
  "description": "A core Pluggable framework based on koa",
  "devDependencies": {
    "autod": "^2.8.0",
    "egg-bin": "^3.4.0",
    "egg-ci": "^1.6.0",
    "eslint": "^3.19.0",
    "eslint-config-egg": "^4.2.0",
    "js-yaml": "^3.8.4",
    "mm": "^2.1.0",
    "mz-modules": "^1.0.0",
    "pedding": "^1.1.0",
    "rimraf": "^2.6.1",
    "spy": "^1.0.0",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "8ca300433612880441caa553667c81f4202ab97b",
    "size": 24486,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/egg-core/download/egg-core-3.10.0.tgz"
  },
  "engines": {
    "node": ">= 6.0.0"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "b294c2d77cda847db2880127f035b9635ea6eb10",
  "homepage": "https://github.com/eggjs/egg-core#readme",
  "keywords": [
    "egg",
    "loader"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "atian25",
      "email": "atian25@qq.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "gxcsoccer",
      "email": "gxcsoccer@126.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    }
  ],
  "name": "egg-core",
  "optionalDependencies": {},
  "publish_time": 1496913099821,
  "readme": "# egg-core\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/egg-core.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/egg-core\n[travis-image]: https://img.shields.io/travis/eggjs/egg-core.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eggjs/egg-core\n[codecov-image]: https://codecov.io/github/eggjs/egg-core/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/eggjs/egg-core?branch=master\n[david-image]: https://img.shields.io/david/eggjs/egg-core.svg?style=flat-square\n[david-url]: https://david-dm.org/eggjs/egg-core\n[snyk-image]: https://snyk.io/test/npm/egg-core/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/egg-core\n[download-image]: https://img.shields.io/npm/dm/egg-core.svg?style=flat-square\n[download-url]: https://npmjs.org/package/egg-core\n\nA core Pluggable framework based on [koa](https://github.com/koajs/koa)\n\n**Don't use it directly, see [egg]**\n\n## Usage\n\nDirectory structure\n\n```\n├── package.json\n├── app.js (optional)\n├── agent.js (optional)\n├── app\n|   ├── router.js\n│   ├── controller\n│   │   └── home.js\n|   ├── extend (optional)\n│   |   ├── helper.js (optional)\n│   |   ├── filter.js (optional)\n│   |   ├── request.js (optional)\n│   |   ├── response.js (optional)\n│   |   ├── context.js (optional)\n│   |   ├── application.js (optional)\n│   |   └── agent.js (optional)\n│   ├── service (optional)\n│   ├── middleware (optional)\n│   │   └── response_time.js\n│   └── view (optional)\n|       ├── layout.html\n│       └── home.html\n├── config\n|   ├── config.default.js\n│   ├── config.prod.js\n|   ├── config.test.js (optional)\n|   ├── config.local.js (optional)\n|   ├── config.unittest.js (optional)\n│   └── plugin.js\n```\n\nThen you can start with code below\n\n```js\nconst Application = require('egg-core').Application;\nconst app = new Application({\n  baseDir: '/path/to/app'\n});\napp.ready(() => app.listen(3000));\n```\n\n## EggLoader\n\nEggLoader can easily load files or directories in your [egg]** project. In addition, you can customize the loader with low level APIs.\n\n### constructor\n\n- {String} baseDir - current directory of application\n- {Object} app - instance of egg application\n- {Object} plugins - merge plugins for test\n- {Logger} logger - logger instance，default is console\n\n### High Level APIs\n\n#### loadPlugin\n\nLoad config/plugin.js\n\n#### loadConfig\n\nLoad config/config.js and config/{serverEnv}.js\n\n#### loadController\n\nLoad app/controller\n\n#### loadMiddleware\n\nLoad app/middleware\n\n#### loadApplicationExtend\n\nLoad app/extend/application.js\n\n#### loadContextExtend\n\nLoad app/extend/context.js\n\n#### loadRequestExtend\n\nLoad app/extend/request.js\n\n#### loadResponseExtend\n\nLoad app/extend/response.js\n\n#### loadHelperExtend\n\nLoad app/extend/helper.js\n\n#### loadCustomApp\n\nLoad app.js\n\n#### loadCustomAgent\n\nLoad agent.js\n\n#### loadService\n\nLoad app/service\n\n### Low Level APIs\n\n#### getServerEnv()\n\nRetrieve application environment variable values via `serverEnv`. You can access directly by calling `this.serverEnv` after instantiation.\n\nserverEnv | description\n---       | ---\ndefault   | default environment\ntest      | system integration testing environment\nprod      | production environment\nlocal     | local environment on your own computer\nunittest  | unit test environment\n\n#### getEggPaths()\n\nTo get directories of the frameworks. A new framework is created by extending egg, then you can use this function to get all frameworks.\n\n#### getLoadUnits()\n\nA loadUnit is a directory that can be loaded by EggLoader, cause it has the same structure.\n\nThis function will get add loadUnits follow the order:\n\n1. plugin\n2. framework\n3. app\n\nloadUnit has a path and a type. Type must be one of those values: *app*, *framework*, *plugin*.\n\n```js\n{\n  path: 'path/to/application',\n  type: 'app'\n}\n```\n\n#### getAppname()\n\nTo get application name from *package.json*\n\n#### appInfo\n\nGet the infomation of the application\n\n- pkg: `package.json`\n- name: the application name from `package.json`\n- baseDir: current directory of application\n- env: equals to serverEnv\n- HOME: home directory of the OS\n- root: baseDir when local and unittest, HOME when other environment\n\n#### loadFile(filepath)\n\nTo load a single file. **Note:** The file must export as a function.\n\n#### loadToApp(directory, property, LoaderOptions)\n\nTo load files from directory in the application.\n\nInvoke `this.loadToApp('$baseDir/app/controller', 'controller')`, then you can use it by `app.controller`.\n\n#### loadToContext(directory, property, LoaderOptions)\n\nTo load files from directory, and it will be bound the context.\n\n```js\n// define service in app/service/query.js\nmodule.exports = class Query {\n  constructor(ctx) {\n    // get the ctx\n  }\n\n  get() {}\n};\n\n// use the service in app/controller/home.js\nmodule.exports = function*() {\n  this.body = this.service.query.get();\n};\n```\n\n#### loadExtend(name, target)\n\nLoader app/extend/xx.js to target, For example,\n\n```js\nthis.loadExtend('application', app);\n```\n\n### LoaderOptions\n\nParam          | Type           | Description\n-------------- | -------------- | ------------------------\ndirectory      | `String/Array` | directories to be loaded\ntarget         | `Object`       | attach the target object from loaded files\nmatch          | `String|Array` | match the files when load, default to `**/*.js`\nignore         | `String|Array` | ignore the files when load\ninitializer    | `Function`     | custom file exports, receive two parameters, first is the inject object(if not js file, will be content buffer), second is an `options` object that contain `path`\ncaseStyle      | `String/Function` | set property's case when converting a filepath to property list.\noverride       | `Boolean`      | determine whether override the property when get the same name\ncall           | `Boolean`      | determine whether invoke when exports is function\ninject         | `Object`       | an object that be the argument when invoke the function\nfilter         | `Function`     | a function that filter the exports which can be loaded\n\n## Questions & Suggestions\n\nPlease open an issue [here](https://github.com/eggjs/egg/issues).\n\n## License\n\n[MIT](LICENSE)\n\n[egg]: https://github.com/eggjs/egg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eggjs/egg-core.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "egg-bin pkgfiles --check && npm run lint && npm run cov",
    "cov": "egg-bin cov",
    "lint": "eslint lib test *.js",
    "pkgfiles": "egg-bin pkgfiles",
    "test": "npm run lint && egg-bin test",
    "test-local": "egg-bin test"
  },
  "version": "3.10.0"
}
