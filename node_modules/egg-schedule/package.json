{
  "_args": [
    [
      {
        "raw": "egg-schedule@^2.3.0",
        "scope": null,
        "escapedName": "egg-schedule",
        "name": "egg-schedule",
        "rawSpec": "^2.3.0",
        "spec": ">=2.3.0 <3.0.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/egg"
    ]
  ],
  "_cnpm_publish_time": 1496713690747,
  "_from": "egg-schedule@^2.3.0",
  "_hasShrinkwrap": false,
  "_id": "egg-schedule@2.4.1",
  "_location": "/egg-schedule",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/egg-schedule-2.4.1.tgz_1496713690624_0.034582899417728186"
  },
  "_npmUser": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "egg-schedule@^2.3.0",
    "scope": null,
    "escapedName": "egg-schedule",
    "name": "egg-schedule",
    "rawSpec": "^2.3.0",
    "spec": ">=2.3.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/egg"
  ],
  "_resolved": "http://registry.npm.taobao.org/egg-schedule/download/egg-schedule-2.4.1.tgz",
  "_shasum": "986dab171990e5e1fa9bfd8381068ab617aee674",
  "_shrinkwrap": null,
  "_spec": "egg-schedule@^2.3.0",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/egg",
  "author": {
    "name": "dead_horse"
  },
  "bugs": {
    "url": "https://github.com/eggjs/egg-schedule/issues"
  },
  "ci": {
    "version": "6, 7, 8",
    "license": true
  },
  "dependencies": {
    "co": "^4.6.0",
    "cron-parser": "^2.4.0",
    "humanize-ms": "^1.2.1",
    "is-type-of": "^1.0.0",
    "safe-timers": "^1.0.1"
  },
  "description": "schedule plugin for egg, support corn job.",
  "devDependencies": {
    "autod": "^2.8.0",
    "egg": "^1.4.0",
    "egg-bin": "^3.4.1",
    "egg-ci": "^1.6.0",
    "egg-mock": "^3.7.1",
    "eslint": "^3.19.0",
    "eslint-config-egg": "^4.2.0",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "986dab171990e5e1fa9bfd8381068ab617aee674",
    "size": 5991,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/egg-schedule/download/egg-schedule-2.4.1.tgz"
  },
  "eggPlugin": {
    "name": "schedule"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "agent.js",
    "lib",
    "app.js"
  ],
  "gitHead": "e61e1b372b1014302a6b83098c432070deb026fe",
  "homepage": "https://github.com/eggjs/egg-schedule#readme",
  "keywords": [
    "egg",
    "egg-plugin",
    "eggPlugin",
    "schedule",
    "cron"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "atian25",
      "email": "atian25@qq.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    }
  ],
  "name": "egg-schedule",
  "optionalDependencies": {},
  "publish_time": 1496713690747,
  "readme": "# egg-schedule\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/egg-schedule.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/egg-schedule\n[travis-image]: https://img.shields.io/travis/eggjs/egg-schedule.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eggjs/egg-schedule\n[codecov-image]: https://codecov.io/github/eggjs/egg-schedule/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/eggjs/egg-schedule?branch=master\n[david-image]: https://img.shields.io/david/eggjs/egg-schedule.svg?style=flat-square\n[david-url]: https://david-dm.org/eggjs/egg-schedule\n[snyk-image]: https://snyk.io/test/npm/egg-schedule/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/egg-schedule\n[download-image]: https://img.shields.io/npm/dm/egg-schedule.svg?style=flat-square\n[download-url]: https://npmjs.org/package/egg-schedule\n\nA schedule plugin for egg. It supports two scheduler types, `worker` and `all`, and can be extended by other plugins.\n\n## Installation\n\n```bash\n$ npm i egg-schedule --save\n```\n\n## Usage\n\n`egg-schedule` is a plugin that has been built-in for egg. It is enabled by default.\n\n```javascript\n// {app_root}/config/plugin.js\nexports.schedule = {\n  package: 'egg-schedule',\n};\n\n// {app_root}/app/schedule/cleandb.js\n/**\n* @property {Object} schedule\n*  - {String} type - schedule type, `worker` or `all`\n*  - {String} [cron] - cron expression, [see below](#cron-style-scheduling)\n*  - {String | Number} [interval] - interval expression in millisecond or express explicitly like '1h'. [see below](#interval-style-scheduling)\n*  - {Boolean} [immediate] - To run a scheduler at startup\n*  - {Boolean} [disable] - whether to disable a scheduler, usually use in dynamic schedule\n*/\nexports.schedule = {\n  type: 'worker',\n  cron: '0 0 3 * * *',\n  // interval: '1h',\n  // immediate: true,\n};\n\nexports.task = function* (ctx) {\n  yield ctx.service.db.cleandb();\n};\n```\n\n## Overview\n\n`egg-schedule` supports both time-based scheduling and interval-based scheduling.\n\nSchedule decision is being made by `agent` process. `agent` triggers a task and sends message to `worker` process. Then, one or all `worker` process(es) execute the task based on schedule type.\n\nTo setup a schedule task, simply create a job file in `{app_root}/app/schedule`. A file contains one job and export `schedule` and `task` properties.\n\nThe rule of thumbs is one job per file.\n\n## Task\n\nTask is a generator function, and accept one parameter, `ctx`. The syntax is, `exports.task = function* (ctx) { ... };`\n\nWhen the scheduled task runs, the scheduled job information will be logged and written to a local file in a folder called `/logs`. The log file contains many useful information, for example,\n\n- ctx.method: `SCHEDULE`\n- ctx.path: `/__schedule/${schedulePath}`. example path: `/__schedule?path=/FULL_PATH_TO/cleandb.js&type=worker&interval=3h`\n- ctx.query: `scheule config(type=worker&cron=*%2F5%20*%20*%20*%20*%20*)`\n\n\nTo create a task, it is as simple as write a generator function. For example:\n\n```javascript\n// A simple logger example\nexports.task = function* (ctx) {\n  ctx.logger.info('Info about your task');\n};\n```\n\n```javascript\n// A real world example: wipe out your database.\n// Use it with caution. :)\nexports.task = function* (ctx) {\n  yield ctx.service.db.cleandb();\n};\n```\n\n## Scheduling\n\n`schedule` is an object that contains one required property, `type`, four optional properties, `{ cron, interval, immediate, disable }`.\n\n### Cron-style Scheduling\n\nUse [cron-parser](https://github.com/harrisiirak/cron-parser).\n\n> Note: `cron-parser` support `second` as optional that is not supported by linux crontab.\n>\n> `@hourly / @daily / @weekly / @monthly / @yearly` is also supported.\n\n```\n*    *    *    *    *    *\n┬    ┬    ┬    ┬    ┬    ┬\n│    │    │    │    │    |\n│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n│    │    │    │    └───── month (1 - 12)\n│    │    │    └────────── day of month (1 - 31)\n│    │    └─────────────── hour (0 - 23)\n│    └──────────────────── minute (0 - 59)\n└───────────────────────── second (0 - 59, optional)\n```\n\nExample:\n\n```javascript\n// To execute task every 3 hours\nexports.schedule = {\n  type: 'worker',\n  cron: '0 0 */3 * * *',\n};\n```\n\n### Interval-style Scheduling\n\nTo use `setInterval`, and support [ms](https://www.npmjs.com/package/ms) conversion style\n\nExample:\n\n```javascript\n// To execute task every 3 hours\nexports.schedule = {\n  type: 'worker',\n  interval: '3h',\n};\n```\n\n### Schedule Type\n\n**Build-in support is:**\n\n  - **worker**: will be executed in one random worker when schedule run.\n  - **all**: will be executed in all workers when schedule run.\n\n**Custom schedule**\n\nTo create a custom schedule, simply create a schedule with a type `custom` and its corresponding method. Inside your custom method, you can schedule the task to be executed by one random worker or all workers with the built-in method `sender.one()` or `sender.all()`.\n\n```javascript\n// {app_root}/agent.js\nconst SCHEDULE_HANDLER = Symbol.for('egg#scheduleHandler');\n\nmodule.exports = agent => {\n  // sender.one() - will notify one random worker to execute task\n  // sender.all() - will notify all workers\n  agent[SCHEDULE_HANDLER].custom = (schedule, sender) =>\n    setInterval(sender.one, schedule.interval);\n};\n\n// {app_root}/app/schedule/other.js\nexports.schedule = {\n  type: 'custom',\n};\n```\n\n## Dynamic schedule\n\n```javascript\n// {app_root}/app/schedule/sync.js\nmodule.exports = app => {\n  exports.schedule = {\n    interval: 10000,\n    type: 'worker',\n    // only start task when hostname match\n    disable: require('os').hostname() !== app.config.sync.hostname\n  };\n\n  exports.task = function* (ctx) {\n    yield ctx.sync();\n  };\n\n  return exports;\n};\n```\n\n## Testing\n\n`app.runSchedule(scheduleName)` is provided by `egg-schedule` plugin only for test purpose.\n\nExample:\n\n```javascript\nit('test a schedule task', function* () {\n  // get app instance\n  yield app.runSchedule('clean_cache');\n});\n```\n\n## Questions & Suggestions\n\nPlease open an issue [here](https://github.com/eggjs/egg/issues).\n\n## License\n\n[MIT](https://github.com/eggjs/egg-schedule/blob/master/LICENSE)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/eggjs/egg-schedule.git"
  },
  "scripts": {
    "autod": "autod",
    "ci": "npm run lint && npm run pkgfiles --check && npm run cov",
    "cov": "egg-bin cov",
    "lint": "eslint .",
    "pkgfiles": "egg-bin pkgfiles",
    "test": "npm run lint -- --fix && npm run pkgfiles && npm run test-local",
    "test-local": "egg-bin test"
  },
  "version": "2.4.1"
}
