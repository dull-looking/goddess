{
  "_args": [
    [
      {
        "raw": "utility@~1.6.0",
        "scope": null,
        "escapedName": "utility",
        "name": "utility",
        "rawSpec": "~1.6.0",
        "spec": ">=1.6.0 <1.7.0",
        "type": "range"
      },
      "/Applications/邓肯21/FE/egg-example/node_modules/childprocess"
    ]
  ],
  "_cnpm_publish_time": 1449220520572,
  "_from": "utility@~1.6.0",
  "_hasShrinkwrap": false,
  "_id": "utility@1.6.0",
  "_location": "/childprocess/utility",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "utility@~1.6.0",
    "scope": null,
    "escapedName": "utility",
    "name": "utility",
    "rawSpec": "~1.6.0",
    "spec": ">=1.6.0 <1.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/childprocess"
  ],
  "_resolved": "http://registry.npm.taobao.org/utility/download/utility-1.6.0.tgz",
  "_shasum": "e5bfb6a783a9c392b9fe70fe45c67fc24405c7e9",
  "_shrinkwrap": null,
  "_spec": "utility@~1.6.0",
  "_where": "/Applications/邓肯21/FE/egg-example/node_modules/childprocess",
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com",
    "url": "http://fengmk2.com"
  },
  "bugs": {
    "url": "https://github.com/node-modules/utility/issues"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "http://fengmk2.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com",
      "url": "https://github.com/dead-horse"
    },
    {
      "name": "haoxin",
      "email": "coderhaoxin@outlook.com",
      "url": "https://github.com/coderhaoxin"
    }
  ],
  "dependencies": {
    "copy-to": "~2.0.1",
    "escape-html": "~1.0.3"
  },
  "description": "A collection of useful utilities.",
  "devDependencies": {
    "autod": "*",
    "beautify-benchmark": "*",
    "benchmark": "1",
    "contributors": "*",
    "istanbul": "*",
    "jshint": "*",
    "mm": "1",
    "mocha": "*",
    "moment": "2",
    "optimized": "1",
    "should": "7"
  },
  "directories": {},
  "dist": {
    "shasum": "e5bfb6a783a9c392b9fe70fe45c67fc24405c7e9",
    "size": 9226,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/utility/download/utility-1.6.0.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "e42d5ea197b6ec0582f97a098530c6698f71fcab",
  "homepage": "https://github.com/node-modules/utility",
  "keywords": [
    "utility",
    "util",
    "utils",
    "sha256",
    "sha1",
    "hash",
    "hex"
  ],
  "license": "MIT",
  "main": "lib/utility.js",
  "maintainers": [
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "utility",
  "optionalDependencies": {},
  "publish_time": 1449220520572,
  "readme": "utility\n=======\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/utility.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/utility\n[travis-image]: https://img.shields.io/travis/node-modules/utility.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/utility\n[codecov-image]: https://codecov.io/github/node-modules/utility/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/node-modules/utility?branch=master\n[download-image]: https://img.shields.io/npm/dm/utility.svg?style=flat-square\n[download-url]: https://npmjs.org/package/utility\n\nA collection of useful utilities.\n\n## Install\n\n```bash\n$ npm install utility\n```\n\n## Usage\n\n```js\nvar utils = require('utility');\n```\n\n### md5\n\n```js\nutils.md5('苏千').should.equal('5f733c47c58a077d61257102b2d44481');\nutils.md5(new Buffer('苏千')).should.equal('5f733c47c58a077d61257102b2d44481');\n// md5 base64 format\nutils.md5('苏千', 'base64'); // 'X3M8R8WKB31hJXECstREgQ=='\n\n// Object md5 hash. Sorted by key, and JSON.stringify. See source code for detail\nutils.md5({foo: 'bar', bar: 'foo'}).should.equal(utils.md5({bar: 'foo', foo: 'bar'}));\n```\n\n### sha1\n\n```js\nutils.sha1('苏千').should.equal('0a4aff6bab634b9c2f99b71f25e976921fcde5a5');\nutils.sha1(new Buffer('苏千')).should.equal('0a4aff6bab634b9c2f99b71f25e976921fcde5a5');\n// sha1 base64 format\nutils.sha1('苏千', 'base64'); // 'Ckr/a6tjS5wvmbcfJel2kh/N5aU='\n\n// Object sha1 hash. Sorted by key, and JSON.stringify. See source code for detail\nutils.sha1({foo: 'bar', bar: 'foo'}).should.equal(utils.sha1({bar: 'foo', foo: 'bar'}));\n```\n\n### sha256\n\n```js\nutils.sha256(new Buffer('苏千')).should.equal('75dd03e3fcdbba7d5bec07900bae740cc8e361d77e7df8949de421d3df5d3635');\n```\n\n### hmac\n\n```js\n// hmac-sha1 with base64 output encoding\nutils.hmac('sha1', 'I am a key', 'hello world'); // 'pO6J0LKDxRRkvSECSEdxwKx84L0='\n```\n\n### decode and encode\n\n```js\n// base64 encode\nutils.base64encode('你好￥'); // '5L2g5aW977+l'\nutils.base64decode('5L2g5aW977+l') // '你好￥'\n\n// urlsafe base64 encode\nutils.base64encode('你好￥', true); // '5L2g5aW977-l'\nutils.base64decode('5L2g5aW977-l', true); // '你好￥'\n\n// html escape\nutils.escape('<script/>\"& &amp;'); // '&lt;script/&gt;&quot;&amp; &amp;'\n\n// Safe encodeURIComponent and decodeURIComponent\nutils.decodeURIComponent(utils.encodeURIComponent('你好, nodejs')).should.equal('你好, nodejs');\n```\n\n### others\n\n___[WARNNING] getIP() remove, PLEASE use `https://github.com/node-modules/address` module instead.___\n\n```js\n// get a function parameter's names\nutils.getParamNames(function (key1, key2) {}); // ['key1', 'key2']\n\n// get a random string, default length is 16.\nutils.randomString(32, '1234567890'); //18774480824014856763726145106142\n\n// check if object has this property\nutils.has({hello: 'world'}, 'hello'); //true\n\n// empty function\nutils.noop = function () {}\n}\n```\n\n### Date utils\n\n```js\n// accessLogDate\nutils.accessLogDate(); // '16/Apr/2013:16:40:09 +0800'\n\n// logDate,\n// 'YYYY-MM-DD HH:mm:ss.SSS' format date string\nutils.logDate(); // '2013-04-17 14:43:02.674'\nutils.YYYYMMDDHHmmssSSS(); // '2013-04-17 14:43:02.674'\nutils.YYYYMMDDHHmmssSSS(','); // '2013-04-17 14:43:02,674'\n\n// 'YYYY-MM-DD HH:mm:ss' format date string\nutils.YYYYMMDDHHmmss(); // '2013-04-17 14:43:02'\nutils.YYYYMMDDHHmmss(new Date(), {dateSep: '.'}); // '2013.04.17 14:43:02'\n\n// 'YYYY-MM-DD' format date string\nutils.YYYYMMDD(); // '2013-04-17'\nutils.YYYYMMDD(''); // '20130417'\nutils.YYYYMMDD(','); // '2013,04,17'\n\n// datestruct\nutils.datestruct(); // { YYYYMMDD: 20130416, H: 8 }\n\n// Unix's timestamp\nutils.timestamp(); // 1378153226\n\n// Parse timestamp\n// seconds\nutils.timestamp(1385091596); // Fri Nov 22 2013 11:39:56 GMT+0800 (CST)\n// millseconds\nutils.timestamp(1385091596000); // Fri Nov 22 2013 11:39:56 GMT+0800 (CST)\n```\n\n### Number utils\n\n```js\n// Detect a number string can safe convert to Javascript Number.: `-9007199254740991 ~ 9007199254740991`\nutils.isSafeNumberString('9007199254740991'); // true\nutils.isSafeNumberString('9007199254740993'); // false\n\n// Convert string to number safe:\nutils.toSafeNumber('9007199254740991'); // 9007199254740991\nutils.toSafeNumber('9007199254740993'); // '9007199254740993'\n```\n\n### Timers\n\n```js\nutils.setImmediate(function () {\n  console.log('hi');\n});\n```\n\n### map\n\nCreate a `real` map in javascript.\n\nuse `Object.create(null)`\n\n```js\nvar map = utils.map({a: 1});\n\n// should.not.exist(map.constractor);\n// should.not.exist(map.__proto__);\n// should.not.exist(map.toString);\n// should not exist any property\n\nconsole.log(map); // {a: 1}\n```\n\n### String utils\n\n```js\n// split string by sep\nutils.split('foo,bar,,,', ','); // ['foo', 'bar']\n\n// replace string work with special chars which `String.prototype.replace` can't handle\nutils.replace('<body> hi', '<body>', '$& body'); // '$& body hi'\n```\n\n### Try\n\n```js\nvar res = utils.try(function () {\n  return JSON.parse(str);\n});\n\n// {error: undefined, value: {foo: 'bar'}}\n// {error: Error, value: undefined}\n```\n\n### JSON\n\n```\nvar obj = utils.strictJSONparse('\"hello\"');\n// will throw when JSON string is not object\n```\n\n## benchmark\n\n* [jsperf: access log date format](http://jsperf.com/access-log-date-format)\n* [benchmark/date_format.js](https://github.com/fengmk2/utility/blob/master/benchmark/date_format.js)\n\n```bash\n$ node benchmark/date_format.js\n\nmoment().format(\"DD/MMM/YYYY:HH:mm:ss ZZ\"): \"16/Apr/2013:21:12:32 +0800\"\nutils.accessLogDate(): \"16/Apr/2013:21:12:32 +0800\"\nfasterAccessDate(): \"16/Apr/2013:21:12:32 +0800\"\nfasterAccessDate2(): \"16/Apr/2013:21:12:32 +0800\"\nnew Date().toString(): \"Tue Apr 16 2013 21:12:32 GMT+0800 (CST)\"\nDate(): \"Tue Apr 16 2013 21:12:32 GMT+0800 (CST)\"\nDate.now(): 1366117952162\n------------------------\nmoment().format('DD/MMM/YYYY:HH:mm:ss ZZ') x 68,300 ops/sec ±5.05% (91 runs sampled)\nutils.accessLogDate() x 1,341,341 ops/sec ±2.72% (90 runs sampled)\nfasterAccessDate() x 357,833 ops/sec ±1.32% (98 runs sampled)\nfasterAccessDate2() x 301,607 ops/sec ±5.03% (83 runs sampled)\nnew Date().toString() x 738,499 ops/sec ±3.54% (86 runs sampled)\nDate() x 794,724 ops/sec ±2.77% (95 runs sampled)\nDate.now() x 8,327,685 ops/sec ±1.85% (94 runs sampled)\nFastest is Date.now()\n```\n\n[benchmark/date_YYYYMMDD.js](https://github.com/fengmk2/utility/blob/master/benchmark/date_YYYYMMDD.js)\n\n```bash\n$ node benchmark/date_YYYYMMDD.js\n\nparseInt(moment().format(\"YYYYMMDD\"), 10): 20130416\nutils.datestruct().YYYYMMDD: 20130416\nnew Date().toString(): \"Tue Apr 16 2013 21:12:02 GMT+0800 (CST)\"\n------------------------\nparseInt(moment().format('YYYYMMDD'), 10) x 129,604 ops/sec ±0.46% (101 runs sampled)\nutils.datestruct().YYYYMMDD x 2,317,461 ops/sec ±1.38% (95 runs sampled)\nnew Date().toString() x 816,731 ops/sec ±3.46% (93 runs sampled)\nFastest is utils.datestruct().YYYYMMDD\n```\n\n## License\n\n[MIT](LICENSE.txt)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/utility.git",
    "web": "https://github.com/node-modules/utility"
  },
  "scripts": {
    "autod": "autod -w --prefix '~' -e benchmark",
    "jshint": "jshint .",
    "test": "mocha -R spec -t 5000 test/*.test.js",
    "test-cov": "istanbul cover node_modules/.bin/_mocha -- -t 5000 test/*.test.js",
    "test-optimized": "node --allow-natives-syntax --trace_opt --trace_deopt test/optimized.js"
  },
  "version": "1.6.0"
}
